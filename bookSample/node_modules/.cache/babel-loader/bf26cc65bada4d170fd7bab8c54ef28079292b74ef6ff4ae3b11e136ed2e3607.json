{"ast":null,"code":"// src/App.js\nimport React,{useState,useEffect}from'react';import{auth,googleProvider}from'./firebase';import axios from'axios';import'./App.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// State variables\nconst[user,setUser]=useState(null);const[phrases]=useState(['Change the world from here','Be the change you wish to see','Turn your wounds into wisdom']);const[phrase,setPhrase]=useState('');const[hiddenPhrase,setHiddenPhrase]=useState('');const[previousGuesses,setPreviousGuesses]=useState('');const[maxGuesses]=useState(7);const[wrongGuesses,setWrongGuesses]=useState(0);const[gameOver,setGameOver]=useState(false);const[solved,setSolved]=useState(false);const[newHandle,setNewHandle]=useState('');// Function to generate a hidden version of the phrase\nconst generateHiddenPhrase=currentPhrase=>{const updatedHiddenPhrase=currentPhrase.split('').map(char=>char.match(/[a-zA-Z]/)?'*':char).join('');setHiddenPhrase(updatedHiddenPhrase);};// Function to process a player's guess\nconst processGuess=guess=>{if(previousGuesses.includes(guess.toLowerCase())){// Check if the guess has already been used\nalert('You have already tried this.');return;}if(phrase.toLowerCase().includes(guess.toLowerCase())){const updatedHiddenPhrase=hiddenPhrase.split('').map((char,index)=>phrase[index].toLowerCase()===guess.toLowerCase()?phrase[index]:char).join('');setHiddenPhrase(updatedHiddenPhrase);if(updatedHiddenPhrase.toLowerCase()===phrase.toLowerCase()){setGameOver(true);// The game is won\nsetSolved(true);}}else{setWrongGuesses(wrongGuesses+1);if(wrongGuesses>=maxGuesses-1){setGameOver(true);// The game is over\n}}setPreviousGuesses(previousGuesses+guess.toLowerCase()+',');};// Function to start a new game\nconst newGame=()=>{setHiddenPhrase('');setPreviousGuesses('');setWrongGuesses(0);setGameOver(false);setSolved(false);const randomIndex=Math.floor(Math.random()*phrases.length);setPhrase(phrases[randomIndex]);generateHiddenPhrase(phrases[randomIndex]);};// Component did mount\nuseEffect(()=>{newGame();// Initialize the game with a random phrase\n},[phrases]);// Function to handle Google sign-in\nconst signInWithGoogle=async()=>{try{const result=await auth.signInWithPopup(googleProvider);const{uid,displayName}=result.user;// Check if the user already exists in the database\nconst existsResponse=await axios.get(\"https://nth-guide-404519.uw.r.appspot.com/exists/\".concat(uid));if(!existsResponse.data){// If the user doesn't exist, add them to the database\nawait axios.post('https://nth-guide-404519.uw.r.appspot.com/users',{googleId:uid,userHandle:displayName});}setUser(result.user);}catch(error){console.error('Google sign-in error:',error);}};useEffect(()=>{// Listen for changes in authentication state\nconst unsubscribe=auth.onAuthStateChanged(authUser=>{setUser(authUser);});// Clean up the listener on component unmount\nreturn()=>{unsubscribe();};},[]);// Function to calculate the game score (replace this with your logic)\nconst calculateGameScore=()=>{// Replace this with your game score calculation logic\nreturn 0;};// Function to save the game\nconst saveGame=async()=>{if(user){try{// Prepare the game record data\nconst gameRecord={userHandle:user.displayName,googleId:user.uid,gameScore:calculateGameScore(),createdAt:new Date().toISOString()};// Make a POST request to save the game\nawait axios.post('https://nth-guide-404519.uw.r.appspot.com/game-records',gameRecord);// Optionally, you can show a success message or update the UI\nconsole.log('Game saved successfully!');}catch(error){console.error('Error saving the game:',error);// Handle errors appropriately\n}}};// Function to fetch user games\nconst fetchUserGames=async()=>{if(user){try{const response=await axios.get(\"https://nth-guide-404519.uw.r.appspot.com/game-records/user/\".concat(user.uid,\"/previous-scores\"));const userGames=response.data;console.log('User Games:',userGames);// Update the UI to display user games (you can use state or a modal)\n}catch(error){console.error('Error fetching user games:',error);// Handle errors appropriately\n}}};// Function to fetch the leaderboard\nconst fetchLeaderboard=async()=>{try{const response=await axios.get('https://nth-guide-404519.uw.r.appspot.com/game-records/top');const leaderboard=response.data;console.log('Leaderboard:',leaderboard);// Update the UI to display the leaderboard (you can use state or a modal)\n}catch(error){console.error('Error fetching leaderboard:',error);// Handle errors appropriately\n}};// Function to update the user handle\nconst updateHandle=async()=>{if(user&&newHandle.trim()!==''){try{// Make a PATCH request to update the user handle\nawait axios.patch(\"https://nth-guide-404519.uw.r.appspot.com/users/\".concat(user.uid,\"/update-handle\"),newHandle);// Optionally, you can show a success message or update the UI\nconsole.log('User handle updated successfully!');}catch(error){console.error('Error updating user handle:',error);// Handle errors appropriately\n}}};// Function to sign out\nconst signOut=()=>{auth.signOut();setUser(null);// Initialize the variables\n};return/*#__PURE__*/_jsx(\"div\",{className:\"App\",children:!user?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Welcome to Wheel of Fortune\"}),/*#__PURE__*/_jsx(\"button\",{onClick:signInWithGoogle,children:\"Sign in with Google\"})]}):/*#__PURE__*/_jsx(\"div\",{children:!gameOver?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Wheel of Fortune\"}),/*#__PURE__*/_jsx(\"div\",{className:\"phrase\",children:hiddenPhrase}),/*#__PURE__*/_jsxs(\"div\",{className:\"previous-guesses\",children:[\"Previous Guesses: \",previousGuesses]}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",maxLength:\"1\",onChange:e=>{const guess=e.target.value;if(guess.match(/[a-zA-Z]/)&&guess.length===1){processGuess(guess);e.target.value='';}else{alert('Please enter Alphabet only');e.target.value='';}}}),/*#__PURE__*/_jsxs(\"div\",{className:\"wrong-guesses\",children:[\"Wrong Guesses: \",wrongGuesses]})]}):/*#__PURE__*/_jsxs(\"div\",{className:\"end-game-message\",children:[solved?/*#__PURE__*/_jsx(\"div\",{className:\"win-message\",children:\"YOU WON!!\"}):/*#__PURE__*/_jsx(\"div\",{className:\"lose-message\",children:\"Game Over!\"}),/*#__PURE__*/_jsx(\"button\",{onClick:newGame,children:\"New Game\"}),/*#__PURE__*/_jsx(\"button\",{onClick:saveGame,children:\"Save Game\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchUserGames,children:\"My Games\"}),/*#__PURE__*/_jsx(\"button\",{onClick:fetchLeaderboard,children:\"Leaderboard\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newHandle,onChange:e=>setNewHandle(e.target.value),placeholder:\"Enter new handle\"}),/*#__PURE__*/_jsx(\"button\",{onClick:updateHandle,children:\"Change Handle\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:signOut,children:\"Sign Out\"})]})})});}export default App;","map":{"version":3,"names":["React","useState","useEffect","auth","googleProvider","axios","jsx","_jsx","jsxs","_jsxs","App","user","setUser","phrases","phrase","setPhrase","hiddenPhrase","setHiddenPhrase","previousGuesses","setPreviousGuesses","maxGuesses","wrongGuesses","setWrongGuesses","gameOver","setGameOver","solved","setSolved","newHandle","setNewHandle","generateHiddenPhrase","currentPhrase","updatedHiddenPhrase","split","map","char","match","join","processGuess","guess","includes","toLowerCase","alert","index","newGame","randomIndex","Math","floor","random","length","signInWithGoogle","result","signInWithPopup","uid","displayName","existsResponse","get","concat","data","post","googleId","userHandle","error","console","unsubscribe","onAuthStateChanged","authUser","calculateGameScore","saveGame","gameRecord","gameScore","createdAt","Date","toISOString","log","fetchUserGames","response","userGames","fetchLeaderboard","leaderboard","updateHandle","trim","patch","signOut","className","children","onClick","type","maxLength","onChange","e","target","value","placeholder"],"sources":["/Users/satya/Desktop/spring lab/bookSample/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { auth, googleProvider } from './firebase';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  // State variables\n  const [user, setUser] = useState(null);\n  const [phrases] = useState([\n    'Change the world from here',\n    'Be the change you wish to see',\n    'Turn your wounds into wisdom',\n  ]);\n  const [phrase, setPhrase] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [previousGuesses, setPreviousGuesses] = useState('');\n  const [maxGuesses] = useState(7);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [solved, setSolved] = useState(false);\n  const [newHandle, setNewHandle] = useState('');\n\n  // Function to generate a hidden version of the phrase\n  const generateHiddenPhrase = (currentPhrase) => {\n    const updatedHiddenPhrase = currentPhrase\n      .split('')\n      .map((char) => (char.match(/[a-zA-Z]/) ? '*' : char))\n      .join('');\n    setHiddenPhrase(updatedHiddenPhrase);\n  };\n\n  // Function to process a player's guess\n  const processGuess = (guess) => {\n    if (previousGuesses.includes(guess.toLowerCase())) {\n      // Check if the guess has already been used\n      alert('You have already tried this.');\n      return;\n    }\n\n    if (phrase.toLowerCase().includes(guess.toLowerCase())) {\n      const updatedHiddenPhrase = hiddenPhrase\n        .split('')\n        .map((char, index) => (phrase[index].toLowerCase() === guess.toLowerCase() ? phrase[index] : char))\n        .join('');\n      setHiddenPhrase(updatedHiddenPhrase);\n\n      if (updatedHiddenPhrase.toLowerCase() === phrase.toLowerCase()) {\n        setGameOver(true); // The game is won\n        setSolved(true);\n      }\n    } else {\n      setWrongGuesses(wrongGuesses + 1);\n\n      if (wrongGuesses >= maxGuesses - 1) {\n        setGameOver(true); // The game is over\n      }\n    }\n\n    setPreviousGuesses(previousGuesses + guess.toLowerCase() + ',');\n  };\n\n  // Function to start a new game\n  const newGame = () => {\n    setHiddenPhrase('');\n    setPreviousGuesses('');\n    setWrongGuesses(0);\n    setGameOver(false);\n    setSolved(false);\n\n    const randomIndex = Math.floor(Math.random() * phrases.length);\n    setPhrase(phrases[randomIndex]);\n    generateHiddenPhrase(phrases[randomIndex]);\n  };\n\n  // Component did mount\n  useEffect(() => {\n    newGame(); // Initialize the game with a random phrase\n  }, [phrases]);\n\n  // Function to handle Google sign-in\n  const signInWithGoogle = async () => {\n    try {\n      const result = await auth.signInWithPopup(googleProvider);\n      const { uid, displayName } = result.user;\n\n      // Check if the user already exists in the database\n      const existsResponse = await axios.get(`https://nth-guide-404519.uw.r.appspot.com/exists/${uid}`);\n\n      if (!existsResponse.data) {\n        // If the user doesn't exist, add them to the database\n        await axios.post('https://nth-guide-404519.uw.r.appspot.com/users', {\n          googleId: uid,\n          userHandle: displayName,\n        });\n      }\n\n      setUser(result.user);\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Listen for changes in authentication state\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      setUser(authUser);\n    });\n\n    // Clean up the listener on component unmount\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  // Function to calculate the game score (replace this with your logic)\n  const calculateGameScore = () => {\n    // Replace this with your game score calculation logic\n    return 0;\n  };\n\n  // Function to save the game\n  const saveGame = async () => {\n    if (user) {\n      try {\n        // Prepare the game record data\n        const gameRecord = {\n          userHandle: user.displayName,\n          googleId: user.uid,\n          gameScore: calculateGameScore(),\n          createdAt: new Date().toISOString(),\n        };\n\n        // Make a POST request to save the game\n        await axios.post('https://nth-guide-404519.uw.r.appspot.com/game-records', gameRecord);\n\n        // Optionally, you can show a success message or update the UI\n        console.log('Game saved successfully!');\n      } catch (error) {\n        console.error('Error saving the game:', error);\n        // Handle errors appropriately\n      }\n    }\n  };\n\n  // Function to fetch user games\n  const fetchUserGames = async () => {\n    if (user) {\n      try {\n        const response = await axios.get(`https://nth-guide-404519.uw.r.appspot.com/game-records/user/${user.uid}/previous-scores`);\n\n        const userGames = response.data;\n        console.log('User Games:', userGames);\n        // Update the UI to display user games (you can use state or a modal)\n      } catch (error) {\n        console.error('Error fetching user games:', error);\n        // Handle errors appropriately\n      }\n    }\n  };\n\n  // Function to fetch the leaderboard\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get('https://nth-guide-404519.uw.r.appspot.com/game-records/top');\n\n      const leaderboard = response.data;\n      console.log('Leaderboard:', leaderboard);\n      // Update the UI to display the leaderboard (you can use state or a modal)\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n      // Handle errors appropriately\n    }\n  };\n\n  // Function to update the user handle\n  const updateHandle = async () => {\n    if (user && newHandle.trim() !== '') {\n      try {\n        // Make a PATCH request to update the user handle\n        await axios.patch(`https://nth-guide-404519.uw.r.appspot.com/users/${user.uid}/update-handle`, newHandle);\n\n        // Optionally, you can show a success message or update the UI\n        console.log('User handle updated successfully!');\n      } catch (error) {\n        console.error('Error updating user handle:', error);\n        // Handle errors appropriately\n      }\n    }\n  };\n\n  // Function to sign out\n  const signOut = () => {\n    auth.signOut();\n    setUser(null); // Initialize the variables\n  };\n\n  return (\n    <div className=\"App\">\n      {!user ? (\n        <div>\n          <h1>Welcome to Wheel of Fortune</h1>\n          <button onClick={signInWithGoogle}>Sign in with Google</button>\n        </div>\n      ) : (\n        <div>\n          {!gameOver ? (\n            <div>\n              <h1>Wheel of Fortune</h1>\n              <div className=\"phrase\">{hiddenPhrase}</div>\n              <div className=\"previous-guesses\">Previous Guesses: {previousGuesses}</div>\n              <input\n                type=\"text\"\n                maxLength=\"1\"\n                onChange={(e) => {\n                  const guess = e.target.value;\n                  if (guess.match(/[a-zA-Z]/) && guess.length === 1) {\n                    processGuess(guess);\n                    e.target.value = '';\n                  } else {\n                    alert('Please enter Alphabet only');\n                    e.target.value = '';\n                  }\n                }}\n              />\n              <div className=\"wrong-guesses\">Wrong Guesses: {wrongGuesses}</div>\n            </div>\n          ) : (\n            <div className=\"end-game-message\">\n              {solved ? (\n                <div className=\"win-message\">YOU WON!!</div>\n              ) : (\n                <div className=\"lose-message\">Game Over!</div>\n              )}\n              <button onClick={newGame}>New Game</button>\n              <button onClick={saveGame}>Save Game</button>\n              <button onClick={fetchUserGames}>My Games</button>\n              <button onClick={fetchLeaderboard}>Leaderboard</button>\n              <div>\n                <input\n                  type=\"text\"\n                  value={newHandle}\n                  onChange={(e) => setNewHandle(e.target.value)}\n                  placeholder=\"Enter new handle\"\n                />\n                <button onClick={updateHandle}>Change Handle</button>\n              </div>\n              <button onClick={signOut}>Sign Out</button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}