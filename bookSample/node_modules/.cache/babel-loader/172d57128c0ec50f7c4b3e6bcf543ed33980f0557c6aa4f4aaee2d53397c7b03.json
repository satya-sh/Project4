{"ast":null,"code":"var _jsxFileName = \"/Users/satya/Desktop/spring lab/bookSample/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { auth, googleProvider } from './firebase';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [user, setUser] = useState(null);\n  const [phrases] = useState(['Change the world from here', 'Be the change you wish to see', 'Turn your wounds into wisdom']);\n  const [phrase, setPhrase] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [previousGuesses, setPreviousGuesses] = useState('');\n  const [maxGuesses] = useState(7);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [solved, setSolved] = useState(false);\n\n  // Function to generate a hidden version of the phrase\n  const generateHiddenPhrase = currentPhrase => {\n    const updatedHiddenPhrase = currentPhrase.split('').map(char => char.match(/[a-zA-Z]/) ? '*' : char).join('');\n    setHiddenPhrase(updatedHiddenPhrase);\n  };\n\n  // Function to process a player's guess\n  const processGuess = guess => {\n    if (previousGuesses.includes(guess.toLowerCase())) {\n      // Check if the guess has already been used\n      alert('You have already tried this.');\n      return;\n    }\n    if (phrase.toLowerCase().includes(guess.toLowerCase())) {\n      const updatedHiddenPhrase = hiddenPhrase.split('').map((char, index) => {\n        if (phrase[index].toLowerCase() === guess.toLowerCase()) {\n          return phrase[index];\n        }\n        return char;\n      }).join('');\n      setHiddenPhrase(updatedHiddenPhrase);\n      if (updatedHiddenPhrase.toLowerCase() === phrase.toLowerCase()) {\n        setGameOver(true); // The game is won\n        setSolved(true);\n      }\n    } else {\n      setWrongGuesses(wrongGuesses + 1);\n      if (wrongGuesses >= maxGuesses - 1) {\n        setGameOver(true); // The game is over\n      }\n    }\n    setPreviousGuesses(previousGuesses + guess.toLowerCase() + ',');\n  };\n\n  // Function to start a new game\n  const newGame = () => {\n    // Reset all game state variables and select a new phrase\n    setHiddenPhrase('');\n    setPreviousGuesses('');\n    setWrongGuesses(0);\n    setGameOver(false);\n    setSolved(false);\n\n    // Select a random phrase from the provided phrases\n    const randomIndex = Math.floor(Math.random() * phrases.length);\n    setPhrase(phrases[randomIndex]);\n    generateHiddenPhrase(phrases[randomIndex]);\n  };\n\n  // Component did mount\n  useEffect(() => {\n    newGame(); // Initialize the game with a random phrase\n  }, [phrases]);\n\n  // Function to handle Google sign-in\n  const signInWithGoogle = async () => {\n    try {\n      const result = await auth.signInWithPopup(googleProvider);\n      setUser(result.user);\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n    }\n  };\n  useEffect(() => {\n    // Listen for changes in authentication state\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      setUser(authUser);\n    });\n\n    // Clean up the listener on component unmount\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Wheel of Fortune\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signInWithGoogle,\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Wheel of Fortune\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phrase\",\n          children: hiddenPhrase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previous-guesses\",\n          children: [\"Previous Guesses: \", previousGuesses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"1\",\n          onChange: e => {\n            const guess = e.target.value;\n            if (guess.match(/[a-zA-Z]/) && guess.length === 1) {\n              processGuess(guess);\n              e.target.value = '';\n            } else {\n              alert('Please enter Alphabet only');\n              e.target.value = '';\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrong-guesses\",\n          children: [\"Wrong Guesses: \", wrongGuesses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"end-game-message\",\n        children: [solved ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"win-message\",\n          children: \"YOU WON!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lose-message\",\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: newGame,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"G+s3pNLKoG9VQxiPLjwR96WkUAU=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","auth","googleProvider","jsxDEV","_jsxDEV","App","_s","user","setUser","phrases","phrase","setPhrase","hiddenPhrase","setHiddenPhrase","previousGuesses","setPreviousGuesses","maxGuesses","wrongGuesses","setWrongGuesses","gameOver","setGameOver","solved","setSolved","generateHiddenPhrase","currentPhrase","updatedHiddenPhrase","split","map","char","match","join","processGuess","guess","includes","toLowerCase","alert","index","newGame","randomIndex","Math","floor","random","length","signInWithGoogle","result","signInWithPopup","error","console","unsubscribe","onAuthStateChanged","authUser","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","maxLength","onChange","e","target","value","_c","$RefreshReg$"],"sources":["/Users/satya/Desktop/spring lab/bookSample/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { auth, googleProvider } from './firebase';\nimport './App.css';\n\nfunction App() {\n  const [user, setUser] = useState(null);\n  const [phrases] = useState([\n    'Change the world from here',\n    'Be the change you wish to see',\n    'Turn your wounds into wisdom',\n  ]);\n  const [phrase, setPhrase] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [previousGuesses, setPreviousGuesses] = useState('');\n  const [maxGuesses] = useState(7);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [solved, setSolved] = useState(false);\n\n  // Function to generate a hidden version of the phrase\n  const generateHiddenPhrase = (currentPhrase) => {\n    const updatedHiddenPhrase = currentPhrase\n      .split('')\n      .map(char => (char.match(/[a-zA-Z]/) ? '*' : char))\n      .join('');\n    setHiddenPhrase(updatedHiddenPhrase);\n  };\n\n  // Function to process a player's guess\n  const processGuess = (guess) => {\n    if (previousGuesses.includes(guess.toLowerCase())) {\n      // Check if the guess has already been used\n      alert('You have already tried this.');\n      return;\n    }\n\n    if (phrase.toLowerCase().includes(guess.toLowerCase())) {\n      const updatedHiddenPhrase = hiddenPhrase\n        .split('')\n        .map((char, index) => {\n          if (phrase[index].toLowerCase() === guess.toLowerCase()) {\n            return phrase[index];\n          }\n          return char;\n        })\n        .join('');\n      setHiddenPhrase(updatedHiddenPhrase);\n\n      if (updatedHiddenPhrase.toLowerCase() === phrase.toLowerCase()) {\n        setGameOver(true); // The game is won\n        setSolved(true);\n      }\n    } else {\n      setWrongGuesses(wrongGuesses + 1);\n\n      if (wrongGuesses >= maxGuesses - 1) {\n        setGameOver(true); // The game is over\n      }\n    }\n\n    setPreviousGuesses(previousGuesses + guess.toLowerCase() + ',');\n  };\n\n  // Function to start a new game\n  const newGame = () => {\n    // Reset all game state variables and select a new phrase\n    setHiddenPhrase('');\n    setPreviousGuesses('');\n    setWrongGuesses(0);\n    setGameOver(false);\n    setSolved(false);\n\n    // Select a random phrase from the provided phrases\n    const randomIndex = Math.floor(Math.random() * phrases.length);\n    setPhrase(phrases[randomIndex]);\n    generateHiddenPhrase(phrases[randomIndex]);\n  };\n\n  // Component did mount\n  useEffect(() => {\n    newGame(); // Initialize the game with a random phrase\n  }, [phrases]);\n\n  // Function to handle Google sign-in\n  const signInWithGoogle = async () => {\n    try {\n      const result = await auth.signInWithPopup(googleProvider);\n      setUser(result.user);\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Listen for changes in authentication state\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      setUser(authUser);\n    });\n\n    // Clean up the listener on component unmount\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  return (\n    <div className=\"App\">\n      {!user ? (\n        <div>\n          <h1>Welcome to Wheel of Fortune</h1>\n          <button onClick={signInWithGoogle}>Sign in with Google</button>\n        </div>\n      ) : (\n        <div>\n          {!gameOver ? (\n            <div>\n              <h1>Wheel of Fortune</h1>\n              <div className=\"phrase\">{hiddenPhrase}</div>\n              <div className=\"previous-guesses\">Previous Guesses: {previousGuesses}</div>\n              <input\n                type=\"text\"\n                maxLength=\"1\"\n                onChange={(e) => {\n                  const guess = e.target.value;\n                  if (guess.match(/[a-zA-Z]/) && guess.length === 1) {\n                    processGuess(guess);\n                    e.target.value = '';\n                  } else {\n                    alert('Please enter Alphabet only');\n                    e.target.value = '';\n                  }\n                }}\n              />\n              <div className=\"wrong-guesses\">Wrong Guesses: {wrongGuesses}</div>\n            </div>\n          ) : (\n            <div className=\"end-game-message\">\n              {solved ? (\n                <div className=\"win-message\">YOU WON!!</div>\n              ) : (\n                <div className=\"lose-message\">Game Over!</div>\n              )}\n              <button onClick={newGame}>New Game</button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}