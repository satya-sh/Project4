{"ast":null,"code":"var _jsxFileName = \"/Users/satya/Desktop/spring lab/bookSample/src/App.js\",\n  _s = $RefreshSig$();\n// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { auth, googleProvider } from './firebase';\nimport axios from 'axios';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  // State variables\n  const [user, setUser] = useState(null);\n  const [phrases] = useState(['Change the world from here', 'Be the change you wish to see', 'Turn your wounds into wisdom']);\n  const [phrase, setPhrase] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [previousGuesses, setPreviousGuesses] = useState('');\n  const [maxGuesses] = useState(7);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [solved, setSolved] = useState(false);\n  const [newHandle, setNewHandle] = useState('');\n\n  // Function to generate a hidden version of the phrase\n  const generateHiddenPhrase = currentPhrase => {\n    const updatedHiddenPhrase = currentPhrase.split('').map(char => char.match(/[a-zA-Z]/) ? '*' : char).join('');\n    setHiddenPhrase(updatedHiddenPhrase);\n  };\n\n  // Function to process a player's guess\n  const processGuess = guess => {\n    if (previousGuesses.includes(guess.toLowerCase())) {\n      // Check if the guess has already been used\n      alert('You have already tried this.');\n      return;\n    }\n    if (phrase.toLowerCase().includes(guess.toLowerCase())) {\n      const updatedHiddenPhrase = hiddenPhrase.split('').map((char, index) => phrase[index].toLowerCase() === guess.toLowerCase() ? phrase[index] : char).join('');\n      setHiddenPhrase(updatedHiddenPhrase);\n      if (updatedHiddenPhrase.toLowerCase() === phrase.toLowerCase()) {\n        setGameOver(true); // The game is won\n        setSolved(true);\n      }\n    } else {\n      setWrongGuesses(wrongGuesses + 1);\n      if (wrongGuesses >= maxGuesses - 1) {\n        setGameOver(true); // The game is over\n      }\n    }\n    setPreviousGuesses(previousGuesses + guess.toLowerCase() + ',');\n  };\n\n  // Function to start a new game\n  const newGame = () => {\n    setHiddenPhrase('');\n    setPreviousGuesses('');\n    setWrongGuesses(0);\n    setGameOver(false);\n    setSolved(false);\n    const randomIndex = Math.floor(Math.random() * phrases.length);\n    setPhrase(phrases[randomIndex]);\n    generateHiddenPhrase(phrases[randomIndex]);\n  };\n\n  // Component did mount\n  useEffect(() => {\n    newGame(); // Initialize the game with a random phrase\n  }, [phrases]);\n\n  // Function to handle Google sign-in\n  const signInWithGoogle = async () => {\n    try {\n      const result = await auth.signInWithPopup(googleProvider);\n      const {\n        uid,\n        displayName\n      } = result.user;\n\n      // Check if the user already exists in the database\n      const existsResponse = await axios.get(`https://nth-guide-404519.uw.r.appspot.com/exists/${uid}`);\n      if (!existsResponse.data) {\n        // If the user doesn't exist, add them to the database\n        await axios.post('https://nth-guide-404519.uw.r.appspot.com/users', {\n          googleId: uid,\n          userHandle: displayName\n        });\n      }\n      setUser(result.user);\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n    }\n  };\n  useEffect(() => {\n    // Listen for changes in authentication state\n    const unsubscribe = auth.onAuthStateChanged(authUser => {\n      setUser(authUser);\n    });\n\n    // Clean up the listener on component unmount\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  // Function to calculate the game score (replace this with your logic)\n  const calculateGameScore = () => {\n    // Replace this with your game score calculation logic\n    return 0;\n  };\n\n  // Function to save the game\n  const saveGame = async () => {\n    if (user) {\n      try {\n        // Prepare the game record data\n        const gameRecord = {\n          userHandle: user.displayName,\n          googleId: user.uid,\n          gameScore: calculateGameScore(),\n          createdAt: new Date().toISOString()\n        };\n\n        // Make a POST request to save the game\n        await axios.post('https://nth-guide-404519.uw.r.appspot.com/game-records', gameRecord);\n\n        // Optionally, you can show a success message or update the UI\n        console.log('Game saved successfully!');\n      } catch (error) {\n        console.error('Error saving the game:', error);\n        // Handle errors appropriately\n      }\n    }\n  };\n\n  // Function to fetch user games\n  const fetchUserGames = async () => {\n    if (user) {\n      try {\n        const response = await axios.get(`https://nth-guide-404519.uw.r.appspot.com/game-records/user/${user.uid}/previous-scores`);\n        const userGames = response.data;\n        console.log('User Games:', userGames);\n        // Update the UI to display user games (you can use state or a modal)\n      } catch (error) {\n        console.error('Error fetching user games:', error);\n        // Handle errors appropriately\n      }\n    }\n  };\n\n  // Function to fetch the leaderboard\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get('https://nth-guide-404519.uw.r.appspot.com/game-records/top');\n      const leaderboard = response.data;\n      console.log('Leaderboard:', leaderboard);\n      // Update the UI to display the leaderboard (you can use state or a modal)\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n      // Handle errors appropriately\n    }\n  };\n\n  // Function to update the user handle\n  const updateHandle = async () => {\n    if (user && newHandle.trim() !== '') {\n      try {\n        // Make a PATCH request to update the user handle\n        await axios.patch(`https://nth-guide-404519.uw.r.appspot.com/users/${user.uid}/update-handle`, newHandle);\n\n        // Optionally, you can show a success message or update the UI\n        console.log('User handle updated successfully!');\n      } catch (error) {\n        console.error('Error updating user handle:', error);\n        // Handle errors appropriately\n      }\n    }\n  };\n\n  // Function to sign out\n  const signOut = () => {\n    auth.signOut();\n    setUser(null); // Initialize the variables\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: !user ? /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Welcome to Wheel of Fortune\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: signInWithGoogle,\n        children: \"Sign in with Google\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: !gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Wheel of Fortune\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"phrase\",\n          children: hiddenPhrase\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"previous-guesses\",\n          children: [\"Previous Guesses: \", previousGuesses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: \"1\",\n          onChange: e => {\n            const guess = e.target.value;\n            if (guess.match(/[a-zA-Z]/) && guess.length === 1) {\n              processGuess(guess);\n              e.target.value = '';\n            } else {\n              alert('Please enter Alphabet only');\n              e.target.value = '';\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"wrong-guesses\",\n          children: [\"Wrong Guesses: \", wrongGuesses]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"end-game-message\",\n        children: [solved ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"win-message\",\n          children: \"YOU WON!!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 17\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"lose-message\",\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: newGame,\n          children: \"New Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveGame,\n          children: \"Save Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchUserGames,\n          children: \"My Games\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: fetchLeaderboard,\n          children: \"Leaderboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newHandle,\n            onChange: e => setNewHandle(e.target.value),\n            placeholder: \"Enter new handle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: updateHandle,\n            children: \"Change Handle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: signOut,\n          children: \"Sign Out\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"8ZZgnqGQSQqr8hucdIOEhIue+40=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","auth","googleProvider","axios","jsxDEV","_jsxDEV","App","_s","user","setUser","phrases","phrase","setPhrase","hiddenPhrase","setHiddenPhrase","previousGuesses","setPreviousGuesses","maxGuesses","wrongGuesses","setWrongGuesses","gameOver","setGameOver","solved","setSolved","newHandle","setNewHandle","generateHiddenPhrase","currentPhrase","updatedHiddenPhrase","split","map","char","match","join","processGuess","guess","includes","toLowerCase","alert","index","newGame","randomIndex","Math","floor","random","length","signInWithGoogle","result","signInWithPopup","uid","displayName","existsResponse","get","data","post","googleId","userHandle","error","console","unsubscribe","onAuthStateChanged","authUser","calculateGameScore","saveGame","gameRecord","gameScore","createdAt","Date","toISOString","log","fetchUserGames","response","userGames","fetchLeaderboard","leaderboard","updateHandle","trim","patch","signOut","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","maxLength","onChange","e","target","value","placeholder","_c","$RefreshReg$"],"sources":["/Users/satya/Desktop/spring lab/bookSample/src/App.js"],"sourcesContent":["// src/App.js\nimport React, { useState, useEffect } from 'react';\nimport { auth, googleProvider } from './firebase';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  // State variables\n  const [user, setUser] = useState(null);\n  const [phrases] = useState([\n    'Change the world from here',\n    'Be the change you wish to see',\n    'Turn your wounds into wisdom',\n  ]);\n  const [phrase, setPhrase] = useState('');\n  const [hiddenPhrase, setHiddenPhrase] = useState('');\n  const [previousGuesses, setPreviousGuesses] = useState('');\n  const [maxGuesses] = useState(7);\n  const [wrongGuesses, setWrongGuesses] = useState(0);\n  const [gameOver, setGameOver] = useState(false);\n  const [solved, setSolved] = useState(false);\n  const [newHandle, setNewHandle] = useState('');\n\n  // Function to generate a hidden version of the phrase\n  const generateHiddenPhrase = (currentPhrase) => {\n    const updatedHiddenPhrase = currentPhrase\n      .split('')\n      .map((char) => (char.match(/[a-zA-Z]/) ? '*' : char))\n      .join('');\n    setHiddenPhrase(updatedHiddenPhrase);\n  };\n\n  // Function to process a player's guess\n  const processGuess = (guess) => {\n    if (previousGuesses.includes(guess.toLowerCase())) {\n      // Check if the guess has already been used\n      alert('You have already tried this.');\n      return;\n    }\n\n    if (phrase.toLowerCase().includes(guess.toLowerCase())) {\n      const updatedHiddenPhrase = hiddenPhrase\n        .split('')\n        .map((char, index) => (phrase[index].toLowerCase() === guess.toLowerCase() ? phrase[index] : char))\n        .join('');\n      setHiddenPhrase(updatedHiddenPhrase);\n\n      if (updatedHiddenPhrase.toLowerCase() === phrase.toLowerCase()) {\n        setGameOver(true); // The game is won\n        setSolved(true);\n      }\n    } else {\n      setWrongGuesses(wrongGuesses + 1);\n\n      if (wrongGuesses >= maxGuesses - 1) {\n        setGameOver(true); // The game is over\n      }\n    }\n\n    setPreviousGuesses(previousGuesses + guess.toLowerCase() + ',');\n  };\n\n  // Function to start a new game\n  const newGame = () => {\n    setHiddenPhrase('');\n    setPreviousGuesses('');\n    setWrongGuesses(0);\n    setGameOver(false);\n    setSolved(false);\n\n    const randomIndex = Math.floor(Math.random() * phrases.length);\n    setPhrase(phrases[randomIndex]);\n    generateHiddenPhrase(phrases[randomIndex]);\n  };\n\n  // Component did mount\n  useEffect(() => {\n    newGame(); // Initialize the game with a random phrase\n  }, [phrases]);\n\n  // Function to handle Google sign-in\n  const signInWithGoogle = async () => {\n    try {\n      const result = await auth.signInWithPopup(googleProvider);\n      const { uid, displayName } = result.user;\n\n      // Check if the user already exists in the database\n      const existsResponse = await axios.get(`https://nth-guide-404519.uw.r.appspot.com/exists/${uid}`);\n\n      if (!existsResponse.data) {\n        // If the user doesn't exist, add them to the database\n        await axios.post('https://nth-guide-404519.uw.r.appspot.com/users', {\n          googleId: uid,\n          userHandle: displayName,\n        });\n      }\n\n      setUser(result.user);\n    } catch (error) {\n      console.error('Google sign-in error:', error);\n    }\n  };\n\n  useEffect(() => {\n    // Listen for changes in authentication state\n    const unsubscribe = auth.onAuthStateChanged((authUser) => {\n      setUser(authUser);\n    });\n\n    // Clean up the listener on component unmount\n    return () => {\n      unsubscribe();\n    };\n  }, []);\n\n  // Function to calculate the game score (replace this with your logic)\n  const calculateGameScore = () => {\n    // Replace this with your game score calculation logic\n    return 0;\n  };\n\n  // Function to save the game\n  const saveGame = async () => {\n    if (user) {\n      try {\n        // Prepare the game record data\n        const gameRecord = {\n          userHandle: user.displayName,\n          googleId: user.uid,\n          gameScore: calculateGameScore(),\n          createdAt: new Date().toISOString(),\n        };\n\n        // Make a POST request to save the game\n        await axios.post('https://nth-guide-404519.uw.r.appspot.com/game-records', gameRecord);\n\n        // Optionally, you can show a success message or update the UI\n        console.log('Game saved successfully!');\n      } catch (error) {\n        console.error('Error saving the game:', error);\n        // Handle errors appropriately\n      }\n    }\n  };\n\n  // Function to fetch user games\n  const fetchUserGames = async () => {\n    if (user) {\n      try {\n        const response = await axios.get(`https://nth-guide-404519.uw.r.appspot.com/game-records/user/${user.uid}/previous-scores`);\n\n        const userGames = response.data;\n        console.log('User Games:', userGames);\n        // Update the UI to display user games (you can use state or a modal)\n      } catch (error) {\n        console.error('Error fetching user games:', error);\n        // Handle errors appropriately\n      }\n    }\n  };\n\n  // Function to fetch the leaderboard\n  const fetchLeaderboard = async () => {\n    try {\n      const response = await axios.get('https://nth-guide-404519.uw.r.appspot.com/game-records/top');\n\n      const leaderboard = response.data;\n      console.log('Leaderboard:', leaderboard);\n      // Update the UI to display the leaderboard (you can use state or a modal)\n    } catch (error) {\n      console.error('Error fetching leaderboard:', error);\n      // Handle errors appropriately\n    }\n  };\n\n  // Function to update the user handle\n  const updateHandle = async () => {\n    if (user && newHandle.trim() !== '') {\n      try {\n        // Make a PATCH request to update the user handle\n        await axios.patch(`https://nth-guide-404519.uw.r.appspot.com/users/${user.uid}/update-handle`, newHandle);\n\n        // Optionally, you can show a success message or update the UI\n        console.log('User handle updated successfully!');\n      } catch (error) {\n        console.error('Error updating user handle:', error);\n        // Handle errors appropriately\n      }\n    }\n  };\n\n  // Function to sign out\n  const signOut = () => {\n    auth.signOut();\n    setUser(null); // Initialize the variables\n  };\n\n  return (\n    <div className=\"App\">\n      {!user ? (\n        <div>\n          <h1>Welcome to Wheel of Fortune</h1>\n          <button onClick={signInWithGoogle}>Sign in with Google</button>\n        </div>\n      ) : (\n        <div>\n          {!gameOver ? (\n            <div>\n              <h1>Wheel of Fortune</h1>\n              <div className=\"phrase\">{hiddenPhrase}</div>\n              <div className=\"previous-guesses\">Previous Guesses: {previousGuesses}</div>\n              <input\n                type=\"text\"\n                maxLength=\"1\"\n                onChange={(e) => {\n                  const guess = e.target.value;\n                  if (guess.match(/[a-zA-Z]/) && guess.length === 1) {\n                    processGuess(guess);\n                    e.target.value = '';\n                  } else {\n                    alert('Please enter Alphabet only');\n                    e.target.value = '';\n                  }\n                }}\n              />\n              <div className=\"wrong-guesses\">Wrong Guesses: {wrongGuesses}</div>\n            </div>\n          ) : (\n            <div className=\"end-game-message\">\n              {solved ? (\n                <div className=\"win-message\">YOU WON!!</div>\n              ) : (\n                <div className=\"lose-message\">Game Over!</div>\n              )}\n              <button onClick={newGame}>New Game</button>\n              <button onClick={saveGame}>Save Game</button>\n              <button onClick={fetchUserGames}>My Games</button>\n              <button onClick={fetchLeaderboard}>Leaderboard</button>\n              <div>\n                <input\n                  type=\"text\"\n                  value={newHandle}\n                  onChange={(e) => setNewHandle(e.target.value)}\n                  placeholder=\"Enter new handle\"\n                />\n                <button onClick={updateHandle}>Change Handle</button>\n              </div>\n              <button onClick={signOut}>Sign Out</button>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}